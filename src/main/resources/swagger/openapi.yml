openapi: 3.0.1
info:
  title: Spring OpenAPI
  description: Spring OpenAPI
  version: 1.0.0
  contact:
    email: soni.12@iitj.ac.in
tags:
  - name: employee-controller
    description: Employee Controller
    externalDocs:
      description: Employee Controller
      url: http://swagger.io
paths:
  /employee:
    # build get Rest api to get all employees
    get:
      tags:
        - employee-controller
      summary: getAllEmployees
      operationId: getAllEmployees
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    # build post Rest api to add new employee in database
    post:
      tags:
        - employee-controller
      summary: addEmployee
      operationId: addEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'


  /employee/{id}:
    # build get Rest api to get employee by id
    get:
      tags:
        - employee-controller
      summary: getEmployeeById
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'

    # build put Rest api to update employee by id and throw error if not found
    put:
      tags:
        - employee-controller
      summary: updateEmployee
      operationId: updateEmployee
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'

    # build delete Rest api to delete employee by id and throw error if not found
    delete:
      tags:
        - employee-controller
      summary: deleteEmployee
      operationId: deleteEmployee
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'

components:
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        salary:
          type: integer
        department:
          type: string